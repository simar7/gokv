package encoding

import (
	"testing"

	"github.com/stretchr/testify/assert"
)

var tsBytes = []byte{0x30, 0xff, 0x81, 0x3, 0x1, 0x1, 0xa, 0x74, 0x65, 0x73, 0x74,
	0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x1, 0xff, 0x82, 0x0, 0x1, 0x3, 0x1, 0x3,
	0x46, 0x6f, 0x6f, 0x1, 0xc, 0x0, 0x1, 0x3, 0x42, 0x61, 0x72, 0x1, 0x8, 0x0,
	0x1, 0x3, 0x42, 0x61, 0x7a, 0x1, 0x4, 0x0, 0x0, 0x0, 0x15, 0xff, 0x82, 0x1,
	0x9, 0x66, 0x6f, 0x6f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x1, 0xfe, 0x45,
	0x40, 0x1, 0xff, 0xf6, 0x0}

var ts = testStruct{
	Foo: "foostring",
	Bar: 42.0,
	Baz: 123,
}

func TestGobCodec_Marshal(t *testing.T) {
	gc := GobCodec{}
	data, err := gc.Marshal(testStruct{
		Foo: "foostring",
		Bar: 42.0,
		Baz: 123,
	})
	assert.NoError(t, err)
	assert.Equal(t, tsBytes, data)
}

func TestGobCodec_Unmarshal(t *testing.T) {
	gc := GobCodec{}
	var data testStruct
	assert.NoError(t, gc.Unmarshal(tsBytes, &data))
	assert.Equal(t, ts, data)
}
